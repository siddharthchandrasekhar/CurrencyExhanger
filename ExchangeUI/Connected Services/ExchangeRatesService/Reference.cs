//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExchangeUI.ExchangeRatesService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExchangeRatesService.IExhangeService")]
    public interface IExhangeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExhangeService/GetRates", ReplyAction="http://tempuri.org/IExhangeService/GetRatesResponse")]
        DataService.Rate[] GetRates(string code, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExhangeService/GetRates", ReplyAction="http://tempuri.org/IExhangeService/GetRatesResponse")]
        System.Threading.Tasks.Task<DataService.Rate[]> GetRatesAsync(string code, System.DateTime fromDate, System.DateTime toDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExhangeServiceChannel : ExchangeUI.ExchangeRatesService.IExhangeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExhangeServiceClient : System.ServiceModel.ClientBase<ExchangeUI.ExchangeRatesService.IExhangeService>, ExchangeUI.ExchangeRatesService.IExhangeService {
        
        public ExhangeServiceClient() {
        }
        
        public ExhangeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExhangeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExhangeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExhangeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DataService.Rate[] GetRates(string code, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.GetRates(code, fromDate, toDate);
        }
        
        public System.Threading.Tasks.Task<DataService.Rate[]> GetRatesAsync(string code, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.GetRatesAsync(code, fromDate, toDate);
        }
    }
}
